<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema 
   xmlns:xsd="http://www.w3.org/2001/XMLSchema"
   targetNamespace="http://niem.gov/niem/external/ogc-filter/1.1.0/dhs-gmo/1.0.0"
   xmlns:ogc="http://niem.gov/niem/external/ogc-filter/1.1.0/dhs-gmo/1.0.0"
   xmlns:gml="http://niem.gov/niem/external/ogc-gml/3.1.1/dhs-gmo/1.0.0"
   elementFormDefault="qualified"
   version="1.1.0">
  <xsd:annotation>
  	<xsd:documentation>
  		This schema document follows NIEM practice of a single schema document per namespace.  It contains the definitions from the OGC schema documents filter.xsd, expr.xsd, sort.xsd, and filterCapabilities.xsd.  See http://schemas.opengeospatial.net/filter/1.1.0/.

     		2006-09-28 Changed namespaces and schema locations
     		
				ns old	http://niem.gov/niem/external/gml/3.1.1/dhs-gmo/1.0.0
				ns new	http://niem.gov/niem/external/ogc-gml/3.1.1/dhs-gmo/1.0.0	
				from		../../../../gml/3.1.1/dhs-gmo/1.0.0/gml.xsd
				to			../../../../ogc-gml/3.1.1/dhs-gmo/1.0.0/gml.xsd

			2006-09-21 Changes
				1.  Change namespaces following NIEM conventions
					a) targetNamespace  http://niem.gov/niem/external/ogc-filter/1.1.0/dhs-gmo/1.1.0
					b) gml namespace		http://niem.gov/niem/external/gml/3.1.1/dhs-gmo/1.0.0
					
			2006-09-04 Changes
			
				1.  Change namespaces following conventions proposed in OGC 05-065r3 to include version and profile information, 
				      except that complete version is used instead of BNF "principle version".  
				      a) targetNamespace was http://www.opengis.net/ogc; changed to http://www.opengis.net/ogc/1.1.0/DHS-GMO/1.0.0
					  b) gml namespace was http://www.opengis.net/gml; changed to http://www.opengis.net/gml/3.1.1/DHS-GMO/1.0.0					  
				2.  Include complete OGC copyright notice from http://www.opengeospatial.org/ogc/software
				

		 	Copyright Notices:

		Copyright (c) 2002, 2003, 2004 OpenGIS, All Rights Reserved. 
		 	
		 	This OGC work (including software, documents, or other related items) is being provided by the copyright holders under the following license. By obtaining, using and/or copying this work, you (the licensee) agree that you have read, understood, and will comply with the following terms and conditions:

Permission to use, copy, and modify this software and its documentation, with or without modification, for any purpose and without fee or royalty is hereby granted, provided that you include the following on ALL copies of the software and documentation or portions thereof, including modifications, that you make:

   1. The full text of this NOTICE in a location viewable to users of the redistributed or derivative work.
   2. Any pre-existing intellectual property disclaimers, notices, or terms and conditions. If none exist, a short notice of the following form (hypertext is preferred, text is permitted) should be used within the body of any redistributed or derivative code: "Copyright Â© [$date-of-document] Open Geospatial Consortium, Inc. All Rights Reserved. http://www.opengeospatial.org/ogc/legal (Hypertext is preferred, but a textual representation is permitted.)
   3. Notice of any changes or modifications to the OGC files, including the date changes were made. (We recommend you provide URIs to the location from which the code is derived.) 

THIS SOFTWARE AND DOCUMENTATION IS PROVIDED "AS IS," AND COPYRIGHT HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE OR DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.

COPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.

The name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.
     

  	</xsd:documentation>
  </xsd:annotation>

 	  <xsd:import namespace="http://niem.gov/niem/external/ogc-gml/3.1.1/dhs-gmo/1.0.0" 
			   schemaLocation="../../../../ogc-gml/3.1.1/dhs-gmo/1.0.0/gml.xsd"/>

  <!-- xsd:include schemaLocation="expr.xsd" --> 
  
   <xsd:element name="Add" type="ogc:BinaryOperatorType"
      substitutionGroup="ogc:expression"/>
   <xsd:element name="Sub" type="ogc:BinaryOperatorType"
      substitutionGroup="ogc:expression"/>
   <xsd:element name="Mul" type="ogc:BinaryOperatorType"
      substitutionGroup="ogc:expression"/>
   <xsd:element name="Div" type="ogc:BinaryOperatorType"
      substitutionGroup="ogc:expression"/>
   <xsd:element name="PropertyName" type="ogc:PropertyNameType"
      substitutionGroup="ogc:expression"/>
   <xsd:element name="Function" type="ogc:FunctionType"
      substitutionGroup="ogc:expression"/>
   <xsd:element name="Literal" type="ogc:LiteralType"
      substitutionGroup="ogc:expression"/>
   <xsd:element name="expression" type="ogc:ExpressionType" abstract="true"/>
   <!-- <xsd:complexType name="ExpressionType" abstract="true" mixed="true"/>
     -->
   <xsd:complexType name="ExpressionType" abstract="true"/>
   <xsd:complexType name="BinaryOperatorType">
      <xsd:complexContent>
         <xsd:extension base="ogc:ExpressionType">
            <xsd:sequence>
               <xsd:element ref="ogc:expression" minOccurs="2" maxOccurs="2"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="FunctionType">
      <xsd:complexContent>
         <xsd:extension base="ogc:ExpressionType">
            <xsd:sequence>
               <xsd:element ref="ogc:expression" minOccurs="0"
                  maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:attribute name="name" type="xsd:string" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="LiteralType">
      <xsd:complexContent mixed="true">
         <xsd:extension base="ogc:ExpressionType">
            <xsd:sequence>
               <xsd:any minOccurs="0"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="PropertyNameType">
      <xsd:complexContent mixed="true">
         <xsd:extension base="ogc:ExpressionType"/>
      </xsd:complexContent>
   </xsd:complexType>
  
  <!-- xsd:include schemaLocation="sort.xsd" -->
  
   <!-- ============================================= -->
   <!-- SORTBY EXPRESSION                             -->
   <!-- ============================================= -->
   <xsd:element name="SortBy" type="ogc:SortByType"/>

   <!-- ============================================= -->
   <!-- COMPLEX TYPES                                 -->
   <!-- ============================================= -->
   <xsd:complexType name="SortByType">
      <xsd:sequence>
         <xsd:element name="SortProperty"
                      type="ogc:SortPropertyType"
                      maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="SortPropertyType">
      <xsd:sequence>
         <xsd:element ref="ogc:PropertyName"/>
         <xsd:element name="SortOrder"
                      type="ogc:SortOrderType"
                      minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="SortOrderType">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DESC"/>
         <xsd:enumeration value="ASC"/>
      </xsd:restriction>
   </xsd:simpleType>

  <!-- xsd:include schemaLocation="filterCapabilities.xsd" -->

   <xsd:element name="Filter_Capabilities">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element name="Spatial_Capabilities"
                         type="ogc:Spatial_CapabilitiesType"/>
            <xsd:element name="Scalar_Capabilities"
                         type="ogc:Scalar_CapabilitiesType"/>
            <xsd:element name="Id_Capabilities"
                         type="ogc:Id_CapabilitiesType"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
   <xsd:complexType name="Spatial_CapabilitiesType">
      <xsd:sequence>
         <xsd:element name="GeometryOperands"
                      type="ogc:GeometryOperandsType"/>
         <xsd:element name="SpatialOperators"
                      type="ogc:SpatialOperatorsType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="GeometryOperandsType">
      <xsd:sequence>
         <xsd:element name="GeometryOperand"
                      type="ogc:GeometryOperandType" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="GeometryOperandType">
      <xsd:restriction base="xsd:QName">
         <xsd:enumeration value="gml:Envelope"/>
         <xsd:enumeration value="gml:Point"/>
         <xsd:enumeration value="gml:LineString"/>
         <xsd:enumeration value="gml:Polygon"/>
         <xsd:enumeration value="gml:ArcByCenterPoint"/>
         <xsd:enumeration value="gml:CircleByCenterPoint"/>
         <xsd:enumeration value="gml:Arc"/>
         <xsd:enumeration value="gml:Circle"/>
         <xsd:enumeration value="gml:ArcByBulge"/>
         <xsd:enumeration value="gml:Bezier"/>
         <xsd:enumeration value="gml:Clothoid"/>
         <xsd:enumeration value="gml:CubicSpline"/>
         <xsd:enumeration value="gml:Geodesic"/>
         <xsd:enumeration value="gml:OffsetCurve"/>
         <xsd:enumeration value="gml:Triangle"/>
         <xsd:enumeration value="gml:PolyhedralSurface"/>
         <xsd:enumeration value="gml:TriangulatedSurface"/>
         <xsd:enumeration value="gml:Tin"/>
         <xsd:enumeration value="gml:Solid"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="SpatialOperatorsType">
      <xsd:sequence>
         <xsd:element name="SpatialOperator"
                      type="ogc:SpatialOperatorType"
                      maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="SpatialOperatorType">
      <xsd:sequence>
         <xsd:element name="GeometryOperands"
                      type="ogc:GeometryOperandsType"
                      minOccurs="0"/>
      </xsd:sequence>
      <xsd:attribute name="name" type="ogc:SpatialOperatorNameType"/>
   </xsd:complexType>
   <xsd:simpleType name="SpatialOperatorNameType">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BBOX"/>
         <xsd:enumeration value="Equals"/>
         <xsd:enumeration value="Disjoint"/>
         <xsd:enumeration value="Intersects"/>
         <xsd:enumeration value="Touches"/>
         <xsd:enumeration value="Crosses"/>
         <xsd:enumeration value="Within"/>
         <xsd:enumeration value="Contains"/>
         <xsd:enumeration value="Overlaps"/>
         <xsd:enumeration value="Beyond"/>
         <xsd:enumeration value="DWithin"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="Scalar_CapabilitiesType">
      <xsd:sequence>
         <xsd:element ref="ogc:LogicalOperators"
                      minOccurs="0" maxOccurs="1"/>
         <xsd:element name="ComparisonOperators"
                      type="ogc:ComparisonOperatorsType"
                      minOccurs="0" maxOccurs="1"/>
         <xsd:element name="ArithmeticOperators"
                      type="ogc:ArithmeticOperatorsType"
                      minOccurs="0" maxOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="LogicalOperators">
      <xsd:complexType/>
   </xsd:element>
   <xsd:complexType name="ComparisonOperatorsType">
      <xsd:sequence maxOccurs="unbounded">
         <xsd:element name="ComparisonOperator"
                      type="ogc:ComparisonOperatorType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="ComparisonOperatorType">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LessThan"/>
         <xsd:enumeration value="GreaterThan"/>
         <xsd:enumeration value="LessThanEqualTo"/>
         <xsd:enumeration value="GreaterThanEqualTo"/>
         <xsd:enumeration value="EqualTo"/>
         <xsd:enumeration value="NotEqualTo"/>
         <xsd:enumeration value="Like"/>
         <xsd:enumeration value="Between"/>
         <xsd:enumeration value="NullCheck"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="ArithmeticOperatorsType">
      <xsd:choice maxOccurs="unbounded">
         <xsd:element ref="ogc:SimpleArithmetic"/>
         <xsd:element name="Functions" type="ogc:FunctionsType"/>
      </xsd:choice>
   </xsd:complexType>
   <xsd:element name="SimpleArithmetic">
      <xsd:complexType/>
   </xsd:element>
   <xsd:complexType name="FunctionsType">
      <xsd:sequence>
         <xsd:element name="FunctionNames" type="ogc:FunctionNamesType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="FunctionNamesType">
      <xsd:sequence maxOccurs="unbounded">
         <xsd:element name="FunctionName" type="ogc:FunctionNameType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="FunctionNameType">
      <xsd:simpleContent>
         <xsd:extension base="xsd:string">
            <xsd:attribute name="nArgs" type="xsd:string" use="required"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:complexType name="Id_CapabilitiesType">
      <xsd:choice maxOccurs="unbounded">
         <xsd:element ref="ogc:EID"/>
         <xsd:element ref="ogc:FID"/>
      </xsd:choice>
   </xsd:complexType>
   <xsd:element name="EID">
      <xsd:complexType/>
   </xsd:element>
   <xsd:element name="FID">
      <xsd:complexType/>
   </xsd:element>

  <!-- =============== filter.xsd ======================== -->

   <xsd:element name="_Id" type="ogc:AbstractIdType" abstract="true"/>
   <xsd:element name="FeatureId"
                type="ogc:FeatureIdType"
                substitutionGroup="ogc:_Id"/>
   <xsd:element name="GmlObjectId"
                type="ogc:GmlObjectIdType"
                substitutionGroup="ogc:_Id"/>

   <xsd:element name="Filter" type="ogc:FilterType"/>
   <xsd:complexType name="FilterType">
      <xsd:choice>
         <xsd:element ref="ogc:spatialOps"/>
         <xsd:element ref="ogc:comparisonOps"/>
         <xsd:element ref="ogc:logicOps"/>
         <xsd:element ref="ogc:_Id" maxOccurs="unbounded"/>
      </xsd:choice>
   </xsd:complexType>

   <xsd:element name="comparisonOps"
                type="ogc:ComparisonOpsType"
                abstract="true"/>
   <xsd:element name="PropertyIsEqualTo"
                type="ogc:BinaryComparisonOpType"
                substitutionGroup="ogc:comparisonOps"/>
   <xsd:element name="PropertyIsNotEqualTo"
                type="ogc:BinaryComparisonOpType"
                substitutionGroup="ogc:comparisonOps"/>
   <xsd:element name="PropertyIsLessThan"
                type="ogc:BinaryComparisonOpType"
                substitutionGroup="ogc:comparisonOps"/>
   <xsd:element name="PropertyIsGreaterThan"
                type="ogc:BinaryComparisonOpType"
                substitutionGroup="ogc:comparisonOps"/>
   <xsd:element name="PropertyIsLessThanOrEqualTo"
                type="ogc:BinaryComparisonOpType"
                substitutionGroup="ogc:comparisonOps"/>
   <xsd:element name="PropertyIsGreaterThanOrEqualTo"
                type="ogc:BinaryComparisonOpType"
                substitutionGroup="ogc:comparisonOps"/>
   <xsd:element name="PropertyIsLike"
                type="ogc:PropertyIsLikeType"
                substitutionGroup="ogc:comparisonOps"/>
   <xsd:element name="PropertyIsNull"
                type="ogc:PropertyIsNullType"
                substitutionGroup="ogc:comparisonOps"/>
   <xsd:element name="PropertyIsBetween"
                type="ogc:PropertyIsBetweenType"
                substitutionGroup="ogc:comparisonOps"/>
   <xsd:complexType name="ComparisonOpsType" abstract="true"/>
   <xsd:element name="spatialOps" type="ogc:SpatialOpsType" abstract="true"/>
   <xsd:element name="Equals"
                type="ogc:BinarySpatialOpType"
                substitutionGroup="ogc:spatialOps"/>
   <xsd:element name="Disjoint"
                type="ogc:BinarySpatialOpType"
                substitutionGroup="ogc:spatialOps"/>
   <xsd:element name="Touches"
                type="ogc:BinarySpatialOpType"
                substitutionGroup="ogc:spatialOps"/>
   <xsd:element name="Within"
                type="ogc:BinarySpatialOpType"
                substitutionGroup="ogc:spatialOps"/>
   <xsd:element name="Overlaps"
                type="ogc:BinarySpatialOpType"
                substitutionGroup="ogc:spatialOps"/>
   <xsd:element name="Crosses"
                type="ogc:BinarySpatialOpType"
                substitutionGroup="ogc:spatialOps"/>
   <xsd:element name="Intersects"
                type="ogc:BinarySpatialOpType"
                substitutionGroup="ogc:spatialOps"/>
   <xsd:element name="Contains"
                type="ogc:BinarySpatialOpType"
                substitutionGroup="ogc:spatialOps"/>
   <xsd:element name="DWithin"
                type="ogc:DistanceBufferType"
                substitutionGroup="ogc:spatialOps"/>
   <xsd:element name="Beyond"
                type="ogc:DistanceBufferType"
                substitutionGroup="ogc:spatialOps"/>
   <xsd:element name="BBOX"
                type="ogc:BBOXType"
                substitutionGroup="ogc:spatialOps"/>
   <xsd:complexType name="SpatialOpsType" abstract="true"/>
   <xsd:element name="logicOps" type="ogc:LogicOpsType" abstract="true"/>
   <xsd:element name="And"
                type="ogc:BinaryLogicOpType"
                substitutionGroup="ogc:logicOps"/>
   <xsd:element name="Or"
                type="ogc:BinaryLogicOpType"
                substitutionGroup="ogc:logicOps"/>
   <xsd:element name="Not"
                type="ogc:UnaryLogicOpType"
                substitutionGroup="ogc:logicOps"/>
   <xsd:complexType name="LogicOpsType" abstract="true"/>
   <xsd:complexType name="AbstractIdType" abstract="true"/>
   <xsd:complexType name="FeatureIdType">
      <xsd:complexContent>
         <xsd:extension base="ogc:AbstractIdType">
            <xsd:attribute name="fid" type="xsd:ID" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="GmlObjectIdType">
      <xsd:complexContent>
         <xsd:extension base="ogc:AbstractIdType">
            <xsd:attribute ref="gml:id" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="BinaryComparisonOpType">
      <xsd:complexContent>
         <xsd:extension base="ogc:ComparisonOpsType">
            <xsd:sequence>
               <xsd:element ref="ogc:expression" minOccurs="2" maxOccurs="2"/>
            </xsd:sequence>
            <xsd:attribute name="matchCase" type="xsd:boolean"
                           use="optional" default="true"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="PropertyIsLikeType">
      <xsd:complexContent>
         <xsd:extension base="ogc:ComparisonOpsType">
            <xsd:sequence>
               <xsd:element ref="ogc:PropertyName"/>
               <xsd:element ref="ogc:Literal"/>
            </xsd:sequence>
            <xsd:attribute name="wildCard" type="xsd:string" use="required"/>
            <xsd:attribute name="singleChar" type="xsd:string" use="required"/>
            <xsd:attribute name="escapeChar" type="xsd:string" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="PropertyIsNullType">
      <xsd:complexContent>
         <xsd:extension base="ogc:ComparisonOpsType">
            <xsd:sequence>
               <xsd:element ref="ogc:PropertyName"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="PropertyIsBetweenType">
      <xsd:complexContent>
         <xsd:extension base="ogc:ComparisonOpsType">
            <xsd:sequence>
               <xsd:element ref="ogc:expression"/>
               <xsd:element name="LowerBoundary" type="ogc:LowerBoundaryType"/>
               <xsd:element name="UpperBoundary" type="ogc:UpperBoundaryType"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="LowerBoundaryType">
      <xsd:choice>
         <xsd:element ref="ogc:expression"/>
      </xsd:choice>
   </xsd:complexType>
   <xsd:complexType name="UpperBoundaryType">
      <xsd:sequence>
         <xsd:element ref="ogc:expression"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="BinarySpatialOpType">
      <xsd:complexContent>
         <xsd:extension base="ogc:SpatialOpsType">
            <xsd:sequence>
               <xsd:element ref="ogc:PropertyName"/>
               <xsd:choice>
                  <xsd:element ref="gml:_Geometry"/>
                  <xsd:element ref="gml:Envelope"/>
               </xsd:choice>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="BBOXType">
      <xsd:complexContent>
         <xsd:extension base="ogc:SpatialOpsType">
            <xsd:sequence>
               <xsd:element ref="ogc:PropertyName"/>
               <xsd:element ref="gml:Envelope"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="DistanceBufferType">
      <xsd:complexContent>
         <xsd:extension base="ogc:SpatialOpsType">
            <xsd:sequence>
               <xsd:element ref="ogc:PropertyName"/>
               <xsd:element ref="gml:_Geometry"/>
               <xsd:element name="Distance" type="ogc:DistanceType"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="DistanceType">
      <xsd:attribute name="units" type="xsd:string" use="required"/>
   </xsd:complexType>
   <xsd:complexType name="BinaryLogicOpType">
      <xsd:complexContent>
         <xsd:extension base="ogc:LogicOpsType">
            <xsd:choice minOccurs="2" maxOccurs="unbounded">
               <xsd:element ref="ogc:comparisonOps"/>
               <xsd:element ref="ogc:spatialOps"/>
               <xsd:element ref="ogc:logicOps"/>
            </xsd:choice>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="UnaryLogicOpType">
      <xsd:complexContent>
         <xsd:extension base="ogc:LogicOpsType">
            <xsd:sequence>
               <xsd:choice>
                  <xsd:element ref="ogc:comparisonOps"/>
                  <xsd:element ref="ogc:spatialOps"/>
                  <xsd:element ref="ogc:logicOps"/>
               </xsd:choice>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
</xsd:schema>

